name: GitHub actions

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  WIN_EIGEN3_INSTALL_DIR: "C:\\ProgramData\\chocolatey\\lib\\eigen"

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Eigen3
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          choco install eigen
        elif [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get install -y libeigen3-dev
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install eigen
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
      shell: bash

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          cmake -B "${{github.workspace}}"/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DEIGEN3_INSTALL_DIR=${{env.WIN_EIGEN3_INSTALL_DIR}}\\include\\eigen3 -DWITH_UNIT_TESTS=ON
        else
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWITH_UNIT_TESTS=ON
        fi
      shell: bash

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target unit_tests --parallel 4

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} -E qpp_Timer
